{"config":{"lang":["en","pt"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Crazyarena Repository","text":"<p>This repository makes use of the CrazyS and Crazyswarm packages as well as the cfclient to provide a starting point for running simulations and real experiments using one or more Crazyflies. The crazyarena repository makes use of docker to simplify the installation procedure.</p>"},{"location":"#prerequesites","title":"Prerequesites","text":"<p>Make sure you have docker properly installed before continuing, official instalation instructions are available here. It is also recommended that you visit the documentation for CrazyS and Crazyswarm.</p>"},{"location":"common_errors/","title":"Common errors","text":"<p>If you encouter the issue ModuleNotFoundError: No module named 'crazyswarm' while running a real experiment using the crazyswarm package, add these lines in the begining of the crazyflie.py file.</p> <pre><code># /home/crazyuser/crazyswarm/ros_ws/src/crazyswarm/scripts/pycrazyswarm/crazyflie.py\nfrom os.path import dirname, abspath\nsys.path.insert(0, dirname(dirname(dirname(abspath(__file__)))))\n</code></pre>"},{"location":"docker/","title":"Dealing with docker containers","text":"<p>If for some reason you need to stop or start the container the following commands might be helpful.</p> <pre><code>docker stop crazyarena\ndocker start crazyarena\n</code></pre> <p>If you need privileged access to the container you can open a new shell with the root user:</p> <pre><code>docker exec -it -u root crazyarena bash\n</code></pre>"},{"location":"install_guide/","title":"Installation Instructions","text":"<p>Start by cloning this repository.</p> <pre><code>git clone https://github.com/hardtekpt/crazyarena\ncd crazyarena\n</code></pre> <p>A script is provided to install the crazyarena. The build flag <code>-b</code> can be used to build the image in adition to creating the container. This flag takes an argument regarding the base image to use. If you have an nvidia gpu then use the cuda image as it contains the nvidia drivers, otherwise use the base image.</p> <pre><code>./run_crazyarena.bash -b &lt;base,cuda&gt;\n</code></pre> <p>After the installation is complete it is possible to start the crazyarena container and open a shell inside. </p> <pre><code>docker start crazyarena\ndocker exec -it crazyarena bash\n</code></pre> <p>Moreover both the CrazyS and Crazyswarm workspaces are available outside the container using docker volumes making it easy to edit files inside them.</p> <p>The repository also includes a convenience script to remove the container, image and volumes from docker. </p> <p>!!! note</p> <pre><code>If you are using this script as middle step to fix your installation don't forget to delete the catkin_ws and crazyswarm folders before installing again.\n</code></pre> <p>Note  If you are using this script as middle step to fix your installation don't forget to delete the catkin_ws and crazyswarm folders before installing again.</p> <pre><code>./rm_crazyarena.bash\n</code></pre> <p>Warning Make sure you only make changes to the contents of the volumes (catkin_ws and crazyswarm folders) while the container is running, otherwise the changes are not persistent and you may loose them.</p>"},{"location":"repo_structure/","title":"Repository Structure","text":"<p>This repository consists of two Dockerfiles along with two scripts:</p> <ul> <li>Dockerfile-base-cuda: A dockerfile which installs the nvidia drivers on top of the base image;</li> <li>Dockerfile: A dockerfile which installs the CrazyS, Crazyswarm and cfclient packages;</li> <li>run_crazyarena.bash: A bash script to create the crazyarena docker container as well as to build the images needed.</li> <li>rm_crazyarena.bash: A bash script to remove the installation of the crazyarena docker container as well as to remove the images and volumes created.</li> </ul>"}]}